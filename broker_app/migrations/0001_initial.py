# Generated by Django 2.0.4 on 2018-05-03 22:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExecutiveSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('notes', models.TextField()),
                ('created_by', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MediaUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('upload', models.FileField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_tenant', models.CharField(max_length=255)),
                ('type_of_tenant', models.CharField(max_length=255)),
                ('commencement_date', models.DateField()),
                ('term_length_YRS', models.FloatField(default=0)),
                ('submarket_A', models.NullBooleanField()),
                ('submarket_B', models.NullBooleanField()),
                ('submarket_C', models.NullBooleanField()),
                ('submarket_D', models.NullBooleanField()),
                ('building_class_A', models.NullBooleanField()),
                ('building_class_B', models.NullBooleanField()),
                ('building_class_C', models.NullBooleanField()),
                ('minimum_rsf', models.FloatField(default=0)),
                ('maximum_rsf', models.FloatField(blank=True, null=True)),
                ('lease_or_purchase', models.CharField(choices=[('Lease', 'Lease'), ('Purchase', 'Purchase')], default='Lease', max_length=10)),
                ('desired_percentage_offices_PCT', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(1.1), django.core.validators.MinValueValidator(-0.1)])),
                ('needs_furniture', models.CharField(choices=[('Y', 'Y'), ('N', 'N')], default='N', max_length=2)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building_name', models.CharField(default='default_building', max_length=255)),
                ('building_address', models.CharField(default='default_address', max_length=255)),
                ('zipcode', models.CharField(default='77019', max_length=10)),
                ('building_size_RSF', models.IntegerField(default=0)),
                ('building_number_of_floors', models.IntegerField(default=0)),
                ('building_avg_floor_size', models.IntegerField(default=0)),
                ('subject_space_floors', models.CharField(default='0', max_length=50, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:\\,\\d+)*\\Z'), code='invalid', message=None)])),
                ('subject_space_size_RSF', models.IntegerField(default=0)),
                ('quoted_net_rental_rate_USD_per_RSF', models.FloatField(default=0)),
                ('estimated_yearly_operating_expenses_USD', models.FloatField(default=0)),
                ('annual_increase_in_net_rental_rate_USD', models.IntegerField(default=0)),
                ('quoted_improvement_allowance_USD', models.IntegerField(default=0)),
                ('quoted_free_rent_months_CNT', models.IntegerField(default=0)),
                ('quoted_free_rent_basis', models.CharField(choices=[('Gross', 'Gross'), ('Net', 'Net')], default='Gross', max_length=10)),
                ('building_reserved_parking_ratio', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(-1)])),
                ('building_reserved_parking_rates_USD_per_DAY', models.FloatField(default=0)),
                ('building_unreserved_parking_ratio', models.FloatField(default=0, validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(-1)])),
                ('building_unreserved_parking_rates_USD_per_DAY', models.FloatField(default=0)),
                ('supplemental_garage_reserved_parking_ratio', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(-1)])),
                ('supplemental_garage_reserved_parking_rates_USD_per_DAY', models.FloatField(blank=True, default=0, null=True)),
                ('supplemental_garage_unreserved_parking_ratio', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(-1)])),
                ('supplemental_garage_unreserved_parking_rates_USD_per_DAY', models.FloatField(blank=True, default=0, null=True)),
                ('subject_space_former_use', models.TextField(blank=True, null=True)),
                ('subject_space_existing_condition', models.TextField(blank=True, null=True)),
                ('building_capital_improvements', models.TextField(blank=True, null=True)),
                ('other_notes', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='broker_app.Requirement')),
            ],
        ),
        migrations.CreateModel(
            name='TourBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tour_title', models.CharField(max_length=255)),
                ('tour_date', models.DateField()),
                ('created_by', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('surveys', models.ManyToManyField(to='broker_app.Survey')),
            ],
        ),
    ]
